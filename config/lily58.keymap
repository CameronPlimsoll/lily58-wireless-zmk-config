/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    combos {
        compatible = "zmk,combos";

        b {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <25 26>;
            layers = <0>;
        };

        l {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <26 27>;
        };

        a1 {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <31 32>;
        };

        a2 {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <32 33>;
        };

        a3 {
            bindings = <&kp LESS_THAN>;
            key-positions = <40 41>;
        };

        a8 {
            bindings = <&kp GREATER_THAN>;
            key-positions = <44 45>;
        };

        a4 {
            bindings = <&kp PLUS>;
            key-positions = <14 15>;
        };

        a5 {
            bindings = <&kp EQUAL>;
            key-positions = <19 20>;
        };

        a6 {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <28 29>;
        };

        a7 {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <30 31>;
        };
    };

    macros {
        email: email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp A &kp M &kp E &kp R &kp O &kp N &kp DOT &kp P &kp L &kp I &kp M &kp S &kp O &kp L &kp L &kp AT &kp R &kp A &kp P &kp I &kp D &kp D &kp E &kp P &kp L &kp O &kp Y &kp DOT &kp C &kp O &kp M>;
            label = "EMAIL";
        };

        launch: launch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(SPACE)>;
            label = "LAUNCH";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            display-name = "Base";
            bindings = <
&kp GRAVE         &kp N1          &kp N2  &kp N3        &kp N4    &kp N5                               &kp N6     &kp N7    &kp N8     &kp N9   &kp N0    &kp BACKSPACE
&kp TAB           &kp Q           &kp W   &kp E         &kp R     &kp T                                &kp Y      &kp U     &kp I      &kp O    &kp P     &kp MINUS
&kp LEFT_ALT      &kp A           &kp S   &kp D         &kp F     &kp G                                &kp H      &kp J     &kp K      &kp L    &kp SEMI  &kp SQT
&kp LEFT_CONTROL  &mt LEFT_ALT Z  &kp X   &kp C         &kp V     &kp B   &kp LBKT          &kp RBKT   &kp N      &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp BACKSLASH
                                          &kp UP_ARROW  &kp DOWN  &mo 1   &kp LEFT_SHIFT    &kp ENTER  &kp SPACE  &kp LEFT  &kp RIGHT
            >;
        };

        raise {
            bindings = <
&kp ESCAPE    &kp F1  &kp F2  &kp F3         &kp F4         &kp F5                                     &kp F6             &kp F7     &kp F8  &kp F9  &kp F10      &kp F11
&bt BT_SEL 0  &trans  &trans  &email         &trans         &launch                                    &kp C_VOLUME_UP    &trans     &trans  &trans  &kp LC(F12)  &kp F12
&bt BT_SEL 1  &trans  &trans  &trans         &kp BACKSPACE  &kp DELETE                                 &kp C_VOLUME_DOWN  &trans     &trans  &trans  &trans       &kp C_AC_HOME
&trans        &trans  &trans  &kp LS(LG(A))  &kp LS(LG(O))  &trans      &kp LG(LEFT)    &kp LG(RIGHT)  &trans             &trans     &trans  &trans  &trans       &kp END
                              &trans         &trans         &trans      &trans          &trans         &mkp LCLK          &mkp RCLK  &trans
            >;
        };
    };
};
